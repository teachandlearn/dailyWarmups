
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

# Warm up prompt: https://projecteuler.net/problem=2

# Create a list of all of the numbers in the Fibonacci Sequence up to 4 million
# iterate while the final number in fib_sequence is less than 4 million
# Add the final two values of the list together to create a new number
# Append that number to the end of the list
fib_sequence = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89]

i = fib_sequence[-1]

while i < 4000000:
    new_num = fib_sequence[-2] + fib_sequence[-1]
    fib_sequence.append(new_num)
    i = fib_sequence[-1]


# Iterate through the list to find sum of all even numbers
sum_of_all_evens = 0

for num in fib_sequence:
    if num % 2 == 0:
        sum_of_all_evens += num
        # print(num)

print(sum_of_all_evens)
